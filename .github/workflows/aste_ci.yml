name: ASTE CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]
  schedule:
    - cron: '0 8 * * 2'  # run once in a week

concurrency:
  group: ${ {github.event_name }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{github.event_name == 'pull_request'}}

jobs:
  build:
    runs-on: ubuntu-24.04
    container: precice/precice:nightly
    timeout-minutes: 80
    env:
      CXX_FLAGS: "-Werror -Wall -Wextra -Wno-unused-parameter"
      CTEST_OUTPUT_ON_FAILURE: "Yes"
    steps:
      - name: setup system
        run: |
          apt-get -y update && apt-get -y upgrade
          apt-get install -y python3-pip pkg-config time
          pip3 install --upgrade pip
      - name: install VTK
        run: |
          git clone https://gitlab.kitware.com/vtk/vtk.git && cd vtk
          git checkout v9.3.0
          mkdir build && cd build
          cmake -DVTK_WRAP_PYTHON="ON" -DVTK_USE_MPI="ON" -DCMAKE_BUILD_TYPE=Release ..
          cmake --build . -j 2 && cmake --install .
          echo "PYTHONPATH=/usr/local/lib/python3.10/site-packages/:${PYTHONPATH}" >> $GITHUB_ENV
          cd
      - uses: actions/checkout@v4
      - name: install example dependencies
        run: |
          python3 -m pip install -r requirements.txt
      - name: prepare directories
        run: |
          mkdir build_gcc build_clang
      - name: build aste gcc
        working-directory: build_gcc
        env:
          CC: gcc
          CXX: g++
        run: |
          cmake ..
          cmake --build .
      - name: Adjust user rights
        run: chown -R precice .
      - name: run test gcc
        working-directory: build_gcc
        run: |
          su -c "ctest" precice
      - name: install clang
        run: |
          apt-get -y install clang
      - name: build aste clang
        working-directory: build_clang
        env:
          CC: clang
          CXX: clang++
        run: |
          cmake ..
          cmake --build .
      - name: Adjust user rights
        run: chown -R precice .
      - name: run test clang
        working-directory: build_clang
        run: |
          su -c "ctest" precice
